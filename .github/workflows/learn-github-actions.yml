name: VALIDATOR
on:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - "*"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#   This workflow contains a single job called "build"
#  changedfiles:
#    runs-on: ubuntu-latest
#    # Map a step output to a job output
#    outputs:
#      all: ${{ steps.changes.outputs.all}}
#    steps:
#      # Make sure we have some code to diff.
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: Get changed files
#        id: changes
#        # Set outputs using the command.
#        run: |
#          echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})"
#          echo "${all[@]}"
#
  test:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.arrayId.outputs.array }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: find the git diff files
        id: arrayId
        run: |
          arr=()
          arr=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          declare -A schemaList
          declare -A seedDataList
          for i in ${arr[*]}
          do
          if [[ "$i" =~ ^src.* ]]; then
            key=$(echo $i | cut -d'/' -f 2-)
            schemaList["${key}"]=$i
          elif [[ "$i" =~ ^seed-data.*  ]]; then
            key=$(echo $i | cut -d'/' -f 2-)
            seedDataList["${key}"]=$i
            if [[ ! -v schemaList["${key}"] ]]; then
              schemaList["${key}"]="schema/""$i"
            fi
          fi
          done
          echo "::set-output name=schema::${schemaList[@]}
          echo "::set-output name=seed-data::${seedDataList[@]}

#      - name: Change the src permissions
#        run: chmod -R +x src/*
      - name: run the db
        run: |
           schema= ${{steps.arrayId.outputs.schema}}
           seedData= ${{steps.arrayId.outputs.seed-data}}
           echo "${schema[@]}"
           echo "${seedData[@]}"
           if [[ ${#schema[@]}>0 || ${#seed-data[@]}>0 ]]; then
              sudo /etc/init.d/mysql start
              mysql -e 'CREATE DATABASE test;' -uroot -proot
              mysql -e 'SHOW DATABASES;' -uroot -proot
              mysql -e 'use test;' -uroot -proot
              mysql -uroot -proot test < ${schema[@]}
              mysql -uroot -proot test < ${seedData[@]}
           fi


#  lint:
#    runs-on: ubuntu-latest
#    # require the first job to have ran
#    needs: changedfiles
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#      - name: echo changed files
#        run: |
#          sudo /etc/init.d/mysql start
#          chmod -R +x src/*
#          mysql -e 'CREATE DATABASE test;' -uroot -proot
#          mysql -e 'SHOW DATABASES;' -uroot -proot
#          mysql -e 'use test;' -uroot -proot
#          mysql -uroot -proot test < ${{needs.changedfiles.outputs.all}}
#          list= ${{needs.changedfiles.outputs.all}}
#          echo "${list[@]}"

